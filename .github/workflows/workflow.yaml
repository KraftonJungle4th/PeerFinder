name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.6

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 테스트 실행 (필요한 경우 활성화)
      # - name: Run tests
      #   run: |
      #     # 테스트 스크립트 실행
      #     python test.py
      #   continue-on-error: true

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region northeast-2

      - name: Deploy to AWS EC2
        run: |
          # EC2 인스턴스에 배포하기 위한 스크립트 예시
          # SSH 키 설정 (GitHub Secrets에 SSH_KEY라는 이름으로 저장된 경우)
          echo "${{ secrets.SSH_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem

          # EC2 인스턴스로 파일 전송
          scp -i deploy_key.pem -o StrictHostKeyChecking=no ./your-application-package.zip ec2-user@your-ec2-instance-public-ip:/path/to/destination

          # EC2 인스턴스에서 애플리케이션 시작 또는 업데이트
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ec2-user@your-ec2-instance-public-ip "bash /path/to/deploy-script.sh"
